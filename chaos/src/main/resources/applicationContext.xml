<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:jdbc="http://www.springframework.org/schema/jdbc"  
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:util="http://www.springframework.org/schema/util" xmlns:task="http://www.springframework.org/schema/task" xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.1.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.1.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.1.xsd"
	default-lazy-init="true">
	 <!--
	<context:spring-configured />
    <context:load-time-weaver  weaver-class="org.springframework.instrument.classloading.ReflectiveLoadTimeWeaver" aspectj-weaving="on"/>
      -->
	<context:component-scan base-package="com.chaos" />


    <bean id="HttpJSONSOAServerSpring" class="com.chaos.SOA.HttpJSONSOAServerSpring" scope="singleton"/>  
    <bean id="testUtil" class="com.chaos.Util.testUtil" scope="singleton"/>  
     <!--
    <bean id="EmployeeController" class="com.chaos.test.EmployeeController" scope="singleton"/> 
    <bean id="ServiceUtil" class="com.chaos.Util.ServiceUtil" scope="singleton"/>  
    --> 
    <!-- 
	<bean id="zookeeper" class="org.apache.zookeeper.ZooKeeper" scope="singleton" >
	      <constructor-arg index="0"  type="String" value="192.168.0.160:2181" />
	      <constructor-arg index="1"  type="int">
	        <value>
	          2000
	        </value>
	      </constructor-arg>
	      <constructor-arg index="2"  type="org.apache.zookeeper.Watcher">
	          <null />   
	      </constructor-arg>    
    </bean>
    -->
    
    
    <bean id="BaseService" class="com.chaos.BaseService.BaseService" scope="singleton"/> 
  
	<!-- 配置数据源 -->
     <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close"> 
              <property name="driverClassName"> 
                     <value>com.mysql.jdbc.Driver</value> 
              </property> 
              <property name="url"> 
                     <value>jdbc:mysql://192.168.0.249:3306/testdb?useUnicode=true&amp;characterEncoding=utf-8</value> 
              </property> 
              <property name="username"> 
                     <value>vrkb</value> 
              </property> 
              <property name="password"> 
                     <value>3dms</value> 
              </property>      
       </bean> 

	<!-- 自动扫描了所有的XxxxMapper.xml对应的mapper接口文件，这样就不用一个一个手动配置Mpper的映射了，只要Mapper接口类和Mapper映射文件对应起来就可以了。 -->
	 <!--
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage"
			value="com.chaos.dao" />
	</bean>
    -->
    
    <!-- 配置Mybatis的文件 ，mapperLocations配置**Mapper.xml文件位置，configLocation配置mybatis-config文件位置-->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
        <property name="mapperLocations" value="classpath*:mybatis/mapper/*.xml"/>  
		<property name="configLocation" value="classpath:mybatis/mybatis-config.xml" />
		<!-- <property name="typeAliasesPackage" value="com.tiantian.ckeditor.model" 
			/> -->
	</bean>
	
	
	 <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
      <constructor-arg index="0" ref="sqlSessionFactory" />
     </bean>
	
	
	
</beans>